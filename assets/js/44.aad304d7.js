(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{269:function(t,a,s){"use strict";s.r(a);var e=s(28),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js-基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-基础"}},[t._v("#")]),t._v(" Js 基础")]),t._v(" "),s("blockquote",[s("p",[t._v("JS 是一种解释型或即时编译型的编程语言，网页脚本语言")])]),t._v(" "),s("h2",{attrs:{id:"组成部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组成部分"}},[t._v("#")]),t._v(" 组成部分")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://bkimg.cdn.bcebos.com/pic/730e0cf3d7ca7bcb3409f115bf096b63f624a89d?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2U3Mg==,xp_5,yp_5",alt:"avatar"}})]),t._v(" "),s("ol",[s("li",[t._v("ECMAScript，描述了该语言的语法和基本对象")]),t._v(" "),s("li",[t._v("文档对象模型（DOM），描述处理网页内容的方法和接口。")]),t._v(" "),s("li",[t._v("浏览器对象模型（BOM），描述与浏览器进行交互的方法和接口。")])]),t._v(" "),s("h2",{attrs:{id:"基本特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本特点"}},[t._v("#")]),t._v(" 基本特点")]),t._v(" "),s("ol",[s("li",[t._v("是一种解释性脚本语言(代码不进行预编译)")]),t._v(" "),s("li",[t._v("主要用来向 HTML（标准通用标记语言下的一个应用）页面添加交互行为,简单理解为给页面添加交互行为，让页面动起来")]),t._v(" "),s("li",[t._v("可以直接嵌入 HTML 页面，但写成单独的 js 文件有利于结构和行为的分离")]),t._v(" "),s("li",[t._v("跨平台特性，在绝大多数浏览器的支持下，可以在多种平台下运行")]),t._v(" "),s("li",[t._v("可以实现 web 页面的人机交互")]),t._v(" "),s("li",[t._v("Javascript 脚本语言同其他语言一样，有它自身的基本数据类型，表达式和算术运算符及程序的基本程序框架")])]),t._v(" "),s("h2",{attrs:{id:"命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[t._v("#")]),t._v(" 命名规范")]),t._v(" "),s("ol",[s("li",[t._v("只能用 英文字母、数字、 _（下划线） 、$ 、四种构成")]),t._v(" "),s("li",[t._v("不能用 数字开头")]),t._v(" "),s("li",[t._v("不能是 js 系统关键字 或 保留关键字")])]),t._v(" "),s("blockquote",[s("p",[t._v("附上 js 系统关键字或保留关键字图")])]),t._v(" "),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("h3",{attrs:{id:"五种基本类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五种基本类型"}},[t._v("#")]),t._v(" 五种基本类型")]),t._v(" "),s("p",[s("strong",[t._v("Number")])]),t._v(" "),s("ul",[s("li",[t._v("Number 类型包含整数和浮点数")])]),t._v(" "),s("p",[s("strong",[t._v("String")])]),t._v(" "),s("ul",[s("li",[t._v("字符串有 length 属性。")])]),t._v(" "),s("p",[s("strong",[t._v("Boolean")])]),t._v(" "),s("ul",[s("li",[t._v("该类型只有两个值，true 和 false")])]),t._v(" "),s("p",[s("strong",[t._v("Null")])]),t._v(" "),s("ul",[s("li",[t._v("null 类型被看做空对象指针，前文说到 null 类型也是空的对象引用")])]),t._v(" "),s("p",[s("strong",[t._v("Undefined")])]),t._v(" "),s("ul",[s("li",[t._v("只有一个值，即 undefined 值。使用 var 声明了变量，但未给变量初始化值，那么这个变量的值就是 undefined。")])]),t._v(" "),s("h3",{attrs:{id:"三大引用类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三大引用类型"}},[t._v("#")]),t._v(" 三大引用类型")]),t._v(" "),s("p",[s("strong",[t._v("Object")])]),t._v(" "),s("ul",[s("li",[t._v("对象 new Object()")])]),t._v(" "),s("p",[s("strong",[t._v("Array")])]),t._v(" "),s("ul",[s("li",[t._v("数组 new Array();")])]),t._v(" "),s("p",[s("strong",[t._v("Function")])]),t._v(" "),s("ul",[s("li",[t._v("函数 function(){}")])]),t._v(" "),s("h2",{attrs:{id:"闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("h3",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),s("ul",[s("li",[t._v("其实就是一种函数，一种可以访问另外一个函数内部变量的函数")])]),t._v(" "),s("h3",{attrs:{id:"作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),s("ol",[s("li",[t._v("延长局部变量的生命周期，一进入函数就创建局部变量,出了这个函数的大括号，变量就会被销毁")]),t._v(" "),s("li",[t._v("闭包相当于是连接函数内部和外部的桥梁")])]),t._v(" "),s("h3",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("p",[t._v("会导致内存泄露，一块内存空间一直占用着没被回收")]),t._v(" "),s("h3",{attrs:{id:"优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),s("p",[t._v("少用闭包，如果这个闭包不用了就记得把闭包赋值为 null")]),t._v(" "),s("h3",{attrs:{id:"例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),s("ul",[s("li",[t._v("想要循环延时输出结果 0 1 2 3 4")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('for (var i = 0; i < 5; ++i) {\n  (function(i) {\n    setTimeout(function() {\n      console.log(i + " ");\n    }, 100);\n  })(i);\n}\n输出结果为 5 5 5 5 5\n')])])]),s("p",[t._v("原因： js 运行环境为单线程，setTimeout 注册的函数需要等到线程空闲时才能执行，此时 for 循环已经结束，i 值为 5，又因为循环中 setTimeout 接受的参数函数通过闭包访问变量 i，所以 5 个定时输出都是 5。")]),t._v(" "),s("ul",[s("li",[t._v("正确写法")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('for (var i = 0; i < 5; ++i) {\n  (function(i) {\n    setTimeout(function() {\n      console.log(i + " ");\n    }, 100);\n  })(i);\n}\n')])])]),s("h2",{attrs:{id:"递归"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[t._v("#")]),t._v(" 递归")]),t._v(" "),s("p",[t._v("简单来说，就是函数变量自己")]),t._v(" "),s("h3",{attrs:{id:"常见应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见应用场景"}},[t._v("#")]),t._v(" 常见应用场景")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 遍历dom树\nfunction traversal(node){\n      //对node的处理\n      if(node && node.nodeType === 1){\n          console.log(node.tagName);\n      }\n      var i = 0, childNodes = node.childNodes,item;\n      for(; i < childNodes.length ; i++){\n          item = childNodes[i];\n          if(item.nodeType === 1){\n              //递归先序遍历子节点\n              traversal(item);\n          }\n      }\n  }\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);
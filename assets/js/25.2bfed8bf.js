(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{261:function(t,a,e){"use strict";e.r(a);var s=e(28),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"h5-篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#h5-篇"}},[t._v("#")]),t._v(" h5 篇")]),t._v(" "),e("h2",{attrs:{id:"页面滚动卡顿-主要是-ios"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#页面滚动卡顿-主要是-ios"}},[t._v("#")]),t._v(" 页面滚动卡顿 (主要是 ios)")]),t._v(" "),e("h3",{attrs:{id:"ios-归于页面滚动的影响在哪里"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ios-归于页面滚动的影响在哪里"}},[t._v("#")]),t._v(" IOS 归于页面滚动的影响在哪里")]),t._v(" "),e("ol",[e("li",[t._v("页面本身的弹性效果 : 因为页面弹性的效果，所以 H5 在滚动的时候 有时候特别难受，你会感觉有几层在页面的感觉，稍不注意就触摸的是顶层，然后整个页面跟着滚动")]),t._v(" "),e("li",[t._v("页面不定位时，普通的滚动效果很卡，不丝滑，效果很木")])]),t._v(" "),e("h3",{attrs:{id:"几种场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#几种场景"}},[t._v("#")]),t._v(" 几种场景")]),t._v(" "),e("blockquote",[e("p",[t._v("第一种场景：就是页面自然撑开(表示页面没有 脱离文档流的定位)，然后滚动很木的情况")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("解决办法： 直接使用：-webkit-overflow-scrolling :touch\n")])])]),e("blockquote",[e("p",[t._v("第二种场景： 页面有固定的顶部导航栏，下面部分需要滚动（或者部分区域需要滚动）")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("解决办法：\n1.用滚动插件 ：better-scroll，基本可以解决滚动的问题，而且不用担心ios页面其他的坑\n缺点： 1.滚动不够丝滑，2.手指按上去停止的时候会有点位移(这点可以解决，但是比较麻烦)\n\n2.  1)页面设置为100%;\n\t2) header部分设置高度，main下面部分设置为 height:calc(100% - xxx);\n\t3）main部分加入overflow-y:scroll ; -webkit-overflow-scrolling :touch\n优点：滚动丝滑，并且触摸比较容易\n缺点：当手指从header部分为触发点时，会带动整个页面进行滚动，有弹性效果，（推荐的做法，因为header区域不大）\n\n3. \t1)页面最外层设置为 position:fixed;  或者顶部header设置position:fixed;\n\t2）内容部分设置高度，并设置overflow-y:scroll ; -webkit-overflow-scrolling :touch\n优点：页面本身弹性效果消失，滚动丝滑\n缺点：有时候会出现滚动的触发不灵敏，或偶尔页面卡死情况（不推荐）\n\n4. 页面使用position:absolute + -webkit-overflow-scrolling :touch的使用\n  缺点：因为脱离文档流的关系，偶尔也会出现类似触发不灵敏的问题。(部分手机，偶尔会出现)\n\n5. 页面使用position:fixed +    transform: translate3d(0, 0, 0) + 要滚动区域height:xxx +overflow-y:scroll ;-webkit-overflow-scrolling :touch;\n\t暂时无缺点：页面固定，滚动顺滑。（推荐的做法）\n")])])]),e("h2",{attrs:{id:"点击事件没反应（ios）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#点击事件没反应（ios）"}},[t._v("#")]),t._v(" 点击事件没反应（ios）")]),t._v(" "),e("blockquote",[e("p",[t._v("一般前两条就能解决问题了")])]),t._v(" "),e("ol",[e("li",[t._v("标签改成 button 标签或者 a 标签")]),t._v(" "),e("li",[t._v("在样式中添加属性 cursor:pointer;")]),t._v(" "),e("li",[t._v("添加 touchstart 事件 document.body.addEventListener('touchstart', function() {});")])]),t._v(" "),e("h2",{attrs:{id:"时间显示-nan-ios"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#时间显示-nan-ios"}},[t._v("#")]),t._v(" 时间显示 NaN(ios)")]),t._v(" "),e("blockquote",[e("p",[t._v("主要会出现在 ios，因为 ios 不支持带 - 格式的参数")])]),t._v(" "),e("h3",{attrs:{id:"解决方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),e("ol",[e("li",[t._v("方法一")])]),t._v(" "),e("ul",[e("li",[t._v("最好是后端给一个时间戳，前端根据需求自己拼装")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("方法二")])]),t._v(" "),e("ul",[e("li",[t._v("把 - 替换成 / , str.replace(/-/g,'/')")])]),t._v(" "),e("h2",{attrs:{id:"点击事件卡顿"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#点击事件卡顿"}},[t._v("#")]),t._v(" 点击事件卡顿")]),t._v(" "),e("h3",{attrs:{id:"问题场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题场景"}},[t._v("#")]),t._v(" 问题场景")]),t._v(" "),e("p",[t._v("写了一个小游戏，类似红包雨，点击会爆开，会有爆开的动画以及金币的动画")]),t._v(" "),e("h3",{attrs:{id:"出现问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#出现问题"}},[t._v("#")]),t._v(" 出现问题")]),t._v(" "),e("p",[t._v("点击汤圆会卡，不灵敏")]),t._v(" "),e("h3",{attrs:{id:"解决想法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决想法"}},[t._v("#")]),t._v(" 解决想法")]),t._v(" "),e("ol",[e("li",[t._v("使用 zepto\n最开始引用的是 jquery，但是考虑到是不是因为 jquery 太大，对于移动端来说，体验不好。但是，问题还是存在")]),t._v(" "),e("li",[t._v("使用其他动画插件\n引入了其他动画组件，例如 pixiJS。但是，问题还是存在")]),t._v(" "),e("li",[t._v("使用 transform 替代定位的 left top\ntransform 会开启加速引擎，但是还是无法解决问题")])]),t._v(" "),e("h3",{attrs:{id:"找问题根源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#找问题根源"}},[t._v("#")]),t._v(" 找问题根源")]),t._v(" "),e("p",[t._v("大多数基于触摸的浏览器设备，在点击时都会有个 300ms 的事件触发等待时间")]),t._v(" "),e("h3",{attrs:{id:"解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),e("ol",[e("li",[t._v("禁用缩放 （chrome 和 firefox）\n在 chrome 和 firefox 的移动版本中，如果禁用了页面缩放，那么着 300ms 的延迟就会自动消失，具体代码如下：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<meta name="viewport" content="width=device-width, user-scalable=no">\n或者\n<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1">\n')])])]),e("p",[t._v("缺点：但是这一方案在 safari 上并不起作用，还会降低有视觉或运动障碍用户的可访问性。")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("设置 viewport 的 device-width （chrome 32+）\n在 chrome 32+ 中，如果设置了 viewport 的宽度小于或等于物理设备的宽度，那么也会达到禁用缩放的效果。")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=3">\n')])])]),e("p",[t._v("注意：这里的最大缩放比与上面 meta 中的值并不一致，这个是关键点。")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("使用指针事件 （IE10+）\n微软已经针对触摸问题发布了具体的规范，例如：在你滚屏的时候 pointerup 事件并不会被触发。\n这儿有一个非标准的 CSS 触摸 action 属性，它允许你移除特定元素或整个文档的触发延迟，而无需禁用缩放")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("a, button {\n\t-ms-touch-action: manipulation; /* IE10 */\n\ttouch-action: manipulation; /* IE11+ */\n}\n\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("使用 fastclick.js\nFastClick 是 FT Labs 专门为解决移动端浏览器 300 毫秒点击延迟问题所开发的一个轻量级的库。简而言之，FastClick 在检测到 touchend 事件的时候，会通过 DOM 自定义事件立即触发一个模拟 click 事件，并把浏览器在 300 毫秒之后真正触发的 click 事件阻止掉。")])]),t._v(" "),e("ul",[e("li",[t._v("原生写法")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("第一步：在页面中引入fastclick.js文件。\n第二步：在js文件中添加以下代码\n在 window load 事件之后，在body上调用FastClick.attach()即可。\nwindow.addEventListener(function(){\n\tFastClick.attach( document.body );\n},false );\n\n\n")])])]),e("ul",[e("li",[t._v("Jquery")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$(function() {\n\tFastClick.attach(document.body);\n});\n\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("使用移动端的点击事件（我自己的解决方法）")])]),t._v(" "),e("ul",[e("li",[t._v("touchstart 或者 touchend")])]),t._v(" "),e("h2",{attrs:{id:"点击事件产生的-mouseevent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#点击事件产生的-mouseevent"}},[t._v("#")]),t._v(" 点击事件产生的 MouseEvent")]),t._v(" "),e("h3",{attrs:{id:"场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),e("p",[t._v("在请求接口的时候，有一个参数我默认给了 Null，但是在请求参数里，发现这个参数的值变成一个 MouseEvent 的对象，导致请求报错")]),t._v(" "),e("h3",{attrs:{id:"寻找原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#寻找原因"}},[t._v("#")]),t._v(" 寻找原因")]),t._v(" "),e("p",[t._v("MouseEvent 接口指用户与指针设备( 如鼠标 )交互时发生的事件。使用此接口的常见事件包括：click，dblclick，mouseup，mousedown。")]),t._v(" "),e("h3",{attrs:{id:"会被赋值的原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#会被赋值的原因"}},[t._v("#")]),t._v(" 会被赋值的原因")]),t._v(" "),e("p",[t._v("暂未找到原因，但是会被赋值的条件，用户点击事件，当前调用的方法里面有传参，当前参数为 null 或者空，就会被赋值一个 MouseEvent 对象")]),t._v(" "),e("h3",{attrs:{id:"笨拙的解决方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#笨拙的解决方法"}},[t._v("#")]),t._v(" 笨拙的解决方法")]),t._v(" "),e("p",[t._v("用了 typeOf 去检查这个参数的类型，判断为 object 就赋值为 null")]),t._v(" "),e("h2",{attrs:{id:"iphone-x-顶部底部白块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iphone-x-顶部底部白块"}},[t._v("#")]),t._v(" iphone X 顶部底部白块")]),t._v(" "),e("h3",{attrs:{id:"产生原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#产生原因"}},[t._v("#")]),t._v(" 产生原因")]),t._v(" "),e("p",[t._v("iphoneX 屏幕组成：上部齐刘海（44px）+ 安全区域（safe area）+ 底部手势区域（34px）。默认，页面只显示在“安全区域”中，导致屏幕顶部和底部看起来很别扭")]),t._v(" "),e("h3",{attrs:{id:"解决方法-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方法-2"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),e("p",[t._v("在 meta 标签中添加 viewport-fit")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no,viewport-fit=cover">\n// 当设置viewport-fit=cover时，如下四个值需要设置，页面才会显示在安全区域中，设置如下：\nbody {\n      padding-top: constant(safe-area-inset-top);  //为导航栏+状态栏总高度（88px）\n      padding-left: constant(safe-area-inset-left);    //如果未竖屏时，为0\n      padding-right: constant(safe-area-inset-right);   //如果未竖屏时，为0\n      padding-bottom: constant(safe-area-inset-bottom);   //为底部圆弧高度（34px）\n}\n')])])]),e("h4",{attrs:{id:"viewport-fit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#viewport-fit"}},[t._v("#")]),t._v(" viewport-fit")]),t._v(" "),e("ul",[e("li",[t._v("contain 可视窗口完全包含网页内容")]),t._v(" "),e("li",[t._v("cover 网页内容完全覆盖可视窗口")]),t._v(" "),e("li",[t._v("auto 类似 contain")])]),t._v(" "),e("h2",{attrs:{id:"软键盘顶起定位元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#软键盘顶起定位元素"}},[t._v("#")]),t._v(" 软键盘顶起定位元素")]),t._v(" "),e("h3",{attrs:{id:"场景-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#场景-2"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),e("p",[t._v("弹出层，有个元素是底部固定定位的，弹出层里边有 input 输入框，当输入框获取焦点弹出键盘，导致底部定位元素被顶")]),t._v(" "),e("h3",{attrs:{id:"原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),e("p",[t._v("个人理解，弹出键盘时，页面可视区变小，但是因为弹出层是一个 fiexd 定位，页面无法进行滚动，导致顶部固定定位元素被顶起")]),t._v(" "),e("h3",{attrs:{id:"解决方案-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-2"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),e("p",[t._v("窗口变化事件，侦听当前可见区域高度，对比原始屏幕可视区高度，如果当前可视区高度比原始屏幕小，证明弹出软键盘了，这个时候就把元素隐藏掉")]),t._v(" "),e("h3",{attrs:{id:"实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),e("ul",[e("li",[t._v("html 部分")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<div class="footer" v-show="hideshow"></div>\n')])])]),e("ul",[e("li",[t._v("JS 部分")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// Vue\ndata(){\n  return {\n    docmHeight: document.documentElement.clientHeight,  //默认屏幕高度\n    showHeight: document.documentElement.clientHeight,   //实时屏幕高度\n    hideshow:true,  //显示或者隐藏footer\n  }\n},\nmounted() {\n  // window.onresize监听页面高度的变化\n  window.onresize = ()=>{\n    return(()=>{\n      this.showHeight = document.body.clientHeight;\n    })()\n  }\n},\n//监听\nwatch:{\n  showHeight:function() {\n    if(this.docmHeight > this.showHeight){\n      this.hideshow=false\n    }else{\n      this.hideshow=true\n    }\n  }\n}\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("JQuery\nvar winHeight = $(window).height();  //获取当前页面高度\n$(window).resize(function () {\n    var thisHeight = $(this).height();\n    if ( winHeight - thisHeight > 140 ) {\n        //键盘弹出\n        $('.footer').css('position','static');\n    } else {\n        //键盘收起\n        $('.footer').css({'position':'fixed','bottom':'0'});\n\n    }\n})\n")])])]),e("h3",{attrs:{id:"小插曲"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小插曲"}},[t._v("#")]),t._v(" 小插曲")]),t._v(" "),e("p",[t._v("这几天在改 bug，有个 bug，侦听可视区，发现高度没有变化，但是键盘时正常弹出收起的，导致元素被隐藏后就出不来了，bug 暂时定位不到。。于是临时想的方案是，给一个参数，记录弹出的次数，偶次数证明弹出键盘")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("data(){\n  return {\n\t\tkeyWordNum:1, // 记录弹出次数\n    hideshow:true,  //显示或者隐藏footer\n  }\n},\nmounted() {\n  // window.onresize监听页面高度的变化\n  window.onresize = ()=>{\n    return(()=>{\n\t\t\tthis.keyWordNum++\n      this.keyWordNum % 2 == 0 ? this.hideshow = false : this.hideshow = true\n    })()\n  }\n},\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);